# Generated by roxygen2: do not edit by hand

export(Pagoda2)
export(armaCor)
export(basicP2proc)
export(buildWijMatrix)
export(calcMulticlassified)
export(cellsPerSelectionGroup)
export(collapse.aspect.clusters)
export(compareClusterings)
export(extendedP2proc)
export(factorFromP2Selection)
export(factorListToMetadata)
export(factorToP2selection)
export(gene.vs.molecule.cell.filter)
export(generateClassificationAnnotation)
export(get.de.geneset)
export(getCellsInSelections)
export(getClusterLabelsFromSelection)
export(getColorsFromP2Selection)
export(getIntExtNamesP2Selection)
export(hierDiffToGenesets)
export(make.p2.app)
export(p2.generate.dr.go)
export(p2.generate.dr.go.web)
export(p2.generate.go)
export(p2.generate.go.web)
export(p2.generate.go.web.fromGOEnv)
export(p2.generate.human.go)
export(p2.generate.human.go.web)
export(p2.generate.mouse.go)
export(p2.generate.mouse.go.web)
export(p2.make.pagoda1.app)
export(p2.metadata.from.factor)
export(p2ViewPagodaApp)
export(pagoda.reduce.loading.redundancy)
export(pagoda.reduce.redundancy)
export(pagoda2WebApp)
export(pathway.pc.correlation.distance)
export(plotEmbeddingColorByP2Selection)
export(plotMulticlassified)
export(plotSelectionOverlaps)
export(projectKNNs)
export(read.10x.matrices)
export(readPagoda2SelectionFile)
export(removeSelectionOverlaps)
export(show.app)
export(t.p2c.view.pathways)
export(validateSelectionsObject)
export(webP2proc)
export(winsorize.matrix)
export(writeGenesAsPagoda2Selection)
export(writePagoda2SelectionFile)
exportClasses(Pagoda2)
exportClasses(p2ViewPagodaApp)
exportClasses(pagoda2WebApp)
import(GO.db)
import(MASS)
import(Matrix)
import(Rook)
import(base64enc)
import(igraph)
import(org.Hs.eg.db)
import(org.Mm.eg.db)
import(parallel)
import(pcaMethods)
import(rjson)
importFrom(RMTstat,WishartMaxPar)
importFrom(Rcpp,evalCpp)
importFrom(Rcpp,sourceCpp)
importFrom(dendsort,dendsort)
importFrom(irlba,irlba)
importFrom(mgcv,gam)
importFrom(parallel,mclapply)
importFrom(pcaMethods,pca)
importFrom(pcaMethods,scores)
importFrom(rjson,fromJSON)
importFrom(rjson,toJSON)
importFrom(stats,runif)
importFrom(urltools,url_decode)
useDynLib(pagoda2)
